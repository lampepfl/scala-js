<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE ci [
  <!ELEMENT ci (task*,matrix*)>
  <!ELEMENT task (#PCDATA)>
  <!ATTLIST task id ID #REQUIRED>
  <!ELEMENT matrix (run*)>
  <!ATTLIST matrix id ID #REQUIRED>
  <!ELEMENT run (v*)>
  <!ATTLIST run matrix IDREF #IMPLIED>
  <!ATTLIST run task IDREF #IMPLIED>
  <!ELEMENT v (#PCDATA)>
  <!ATTLIST v n CDATA #REQUIRED>
]>
<ci>

  <task id="main"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbtretry ++$scala! helloworld/run &&
    sbtretry 'set scalaJSStage in Global := FullOptStage' \
        ++$scala! helloworld/run \
        helloworld/clean &&
    sbtretry 'set scalaJSLinkerConfig in helloworld ~= (_.withOptimizer(false))' \
        ++$scala! helloworld/run \
        helloworld/clean &&
    sbtretry 'set scalaJSLinkerConfig in helloworld ~= (_.withSemantics(_.withAsInstanceOfs(CheckedBehavior.Unchecked)))' \
        ++$scala! helloworld/run \
        helloworld/clean &&
    sbtretry ++$scala! \
        'set scalaJSLinkerConfig in helloworld ~= (_.withModuleKind(ModuleKind.CommonJSModule))' \
        helloworld/run \
        helloworld/clean &&
    sbtretry ++$scala! testingExample/testHtml &&
    sbtretry 'set scalaJSStage in Global := FullOptStage' \
        ++$scala! testingExample/testHtml \
        testingExample/clean &&
    sbtretry ++$scala! library/test &&
    sbtretry ++$scala! testSuiteJVM/test testSuiteJVM/clean &&
    sbtretry ++$scala! testSuite/test &&
    sbtretry ++$scala! testSuiteEx/test &&
    sbtretry 'set scalaJSStage in Global := FullOptStage' \
        ++$scala! testSuiteEx/test &&
    sbtretry ++$scala! testSuite/test:doc compiler/test reversi/fastOptJS reversi/fullOptJS &&
    sbtretry ++$scala! compiler/compile:doc library/compile:doc \
        testInterface/compile:doc &&
    sbtretry ++$scala! partest/fetchScalaSource &&
    sbtretry ++$scala! library/mimaReportBinaryIssues testInterface/mimaReportBinaryIssues &&
    sh ci/checksizes.sh $scala &&
    sh ci/check-partest-coverage.sh $scala
  ]]></task>

  <task id="test-suite-ecma-script5"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbtretry ++$scala! jUnitTestOutputsJVM/test jUnitTestOutputsJS/test \
        'set scalaJSStage in Global := FullOptStage' jUnitTestOutputsJS/test &&
    sbtretry ++$scala! $testSuite/test &&
    sbtretry 'set scalaJSStage in Global := FullOptStage' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withOptimizer(false))' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= makeCompliant' \
        ++$scala! $testSuite/test &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= makeCompliant' \
        'set scalaJSStage in Global := FullOptStage' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= makeCompliant' \
        'set scalaJSLinkerConfig in $testSuite ~= (_.withOptimizer(false))' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalacOptions in $testSuite += "-Xexperimental"' \
        ++$scala! $testSuite/test &&
    sbtretry 'set scalacOptions in $testSuite += "-Xexperimental"' \
        'set scalaJSStage in Global := FullOptStage' \
        ++$scala! $testSuite/test &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withModuleKind(ModuleKind.CommonJSModule))' \
        ++$scala! $testSuite/test &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withModuleKind(ModuleKind.CommonJSModule))' \
        'set scalaJSStage in Global := FullOptStage' \
        ++$scala! $testSuite/test
  ]]></task>

  <task id="test-suite-ecma-script5-force-polyfills"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbtretry 'set jsEnv in $testSuite := new NodeJSEnvForcePolyfills()' \
        ++$scala! $testSuite/test &&
    sbtretry 'set jsEnv in $testSuite := new NodeJSEnvForcePolyfills()' \
        'set scalaJSStage in Global := FullOptStage' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set jsEnv in $testSuite := new NodeJSEnvForcePolyfills()' \
        'set scalaJSLinkerConfig in $testSuite ~= (_.withOptimizer(false))' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set jsEnv in $testSuite := new NodeJSEnvForcePolyfills()' \
        'set scalaJSLinkerConfig in $testSuite ~= makeCompliant' \
        ++$scala! $testSuite/test &&
    sbtretry 'set jsEnv in $testSuite := new NodeJSEnvForcePolyfills()' \
        'set scalaJSLinkerConfig in $testSuite ~= makeCompliant' \
        'set scalaJSStage in Global := FullOptStage' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set jsEnv in $testSuite := new NodeJSEnvForcePolyfills()' \
        'set scalaJSLinkerConfig in $testSuite ~= makeCompliant' \
        'set scalaJSLinkerConfig in $testSuite ~= (_.withOptimizer(false))' \
        ++$scala! $testSuite/test \
        $testSuite/clean
  ]]></task>

  <task id="test-suite-ecma-script6"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withOutputMode(OutputMode.ECMAScript6))' \
        'set jsEnv in $testSuite := new org.scalajs.jsenv.nodejs.NodeJSEnv(org.scalajs.jsenv.nodejs.NodeJSEnv.Config().withSourceMap(false))' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withOutputMode(OutputMode.ECMAScript6))' \
        'set jsEnv in $testSuite := new org.scalajs.jsenv.nodejs.NodeJSEnv(org.scalajs.jsenv.nodejs.NodeJSEnv.Config().withSourceMap(false))' \
        'set scalaJSLinkerConfig in $testSuite ~= (_.withOptimizer(false))' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withOutputMode(OutputMode.ECMAScript6))' \
        'set jsEnv in $testSuite := new org.scalajs.jsenv.nodejs.NodeJSEnv(org.scalajs.jsenv.nodejs.NodeJSEnv.Config().withSourceMap(false))' \
        'set scalaJSLinkerConfig in $testSuite ~= makeCompliant' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withOutputMode(OutputMode.ECMAScript6))' \
        'set jsEnv in $testSuite := new org.scalajs.jsenv.nodejs.NodeJSEnv(org.scalajs.jsenv.nodejs.NodeJSEnv.Config().withSourceMap(false))' \
        'set scalaJSLinkerConfig in $testSuite ~= makeCompliant' \
        'set scalaJSLinkerConfig in $testSuite ~= (_.withOptimizer(false))' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withOutputMode(OutputMode.ECMAScript6))' \
        'set jsEnv in $testSuite := new org.scalajs.jsenv.nodejs.NodeJSEnv(org.scalajs.jsenv.nodejs.NodeJSEnv.Config().withSourceMap(false))' \
        'set scalaJSStage in Global := FullOptStage' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withOutputMode(OutputMode.ECMAScript6))' \
        'set jsEnv in $testSuite := new org.scalajs.jsenv.nodejs.NodeJSEnv(org.scalajs.jsenv.nodejs.NodeJSEnv.Config().withSourceMap(false))' \
        'set scalaJSStage in Global := FullOptStage' \
        'set scalaJSLinkerConfig in $testSuite ~= (_.withOptimizer(false))' \
        ++$scala! $testSuite/test \
        $testSuite/clean &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withOutputMode(OutputMode.ECMAScript6))' \
        'set jsEnv in $testSuite := new org.scalajs.jsenv.nodejs.NodeJSEnv(org.scalajs.jsenv.nodejs.NodeJSEnv.Config().withSourceMap(false))' \
        'set scalaJSLinkerConfig in $testSuite ~= (_.withModuleKind(ModuleKind.CommonJSModule))' \
        ++$scala! $testSuite/test &&
    sbtretry 'set scalaJSLinkerConfig in $testSuite ~= (_.withOutputMode(OutputMode.ECMAScript6))' \
        'set jsEnv in $testSuite := new org.scalajs.jsenv.nodejs.NodeJSEnv(org.scalajs.jsenv.nodejs.NodeJSEnv.Config().withSourceMap(false))' \
        'set scalaJSLinkerConfig in $testSuite ~= (_.withModuleKind(ModuleKind.CommonJSModule))' \
        'set scalaJSStage in Global := FullOptStage' \
        ++$scala! $testSuite/test
  ]]></task>

  <task id="bootstrap"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbt ++$scala! linker/test &&
    sbt ++$scala! irJS/test ioJS/test linkerJS/test &&
    sbt 'set scalaJSStage in Global := FullOptStage' \
        ++$scala! irJS/test ioJS/test linkerJS/test &&
    sbt ++$scala! testSuite/test:fastOptJS &&
    sbt ++$scala! linkerJS/bootstrapTest &&
    sbt ++$scala! testSuite/test:fullOptJS &&
    sbt 'set scalaJSStage in Global := FullOptStage' \
        ++$scala! linkerJS/bootstrapTest &&
    sbt ++$scala! irJS/mimaReportBinaryIssues ioJS/mimaReportBinaryIssues \
        loggingJS/mimaReportBinaryIssues linkerJS/mimaReportBinaryIssues
  ]]></task>

  <task id="tools-stubs"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbt ++$scala! ir/test io/test logging/compile linker/compile \
        stubs/package nodeJSEnv/test testAdapter/test \
        ir/mimaReportBinaryIssues io/mimaReportBinaryIssues \
        logging/mimaReportBinaryIssues linker/mimaReportBinaryIssues \
        jsEnvs/mimaReportBinaryIssues jsEnvsTestKit/mimaReportBinaryIssues \
        nodeJSEnv/mimaReportBinaryIssues \
        testAdapter/mimaReportBinaryIssues \
        stubs/mimaReportBinaryIssues &&
    sbt ++$scala! ir/compile:doc io/compile:doc logging/compile:doc \
        linker/compile:doc jsEnvs/compile:doc \
        jsEnvsTestKit/compile:doc nodeJSEnv/compile:doc \
        testAdapter/compile:doc stubs/compile:doc
  ]]></task>

  <task id="tools-stubs-sbtplugin"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbt ++$scala! ir/test io/test logging/compile linker/compile \
        stubs/package nodeJSEnv/test testAdapter/test \
        sbtPlugin/package \
        ir/mimaReportBinaryIssues io/mimaReportBinaryIssues \
        logging/mimaReportBinaryIssues linker/mimaReportBinaryIssues \
        jsEnvs/mimaReportBinaryIssues jsEnvsTestKit/mimaReportBinaryIssues \
        nodeJSEnv/mimaReportBinaryIssues \
        testAdapter/mimaReportBinaryIssues \
        stubs/mimaReportBinaryIssues \
        sbtPlugin/mimaReportBinaryIssues &&
    sbt ++$scala! library/scalastyle javalanglib/scalastyle javalib/scalastyle \
        ir/scalastyle compiler/scalastyle \
        compiler/test:scalastyle io/scalastyle io/test:scalastyle \
        logging/scalastyle logging/test:scalastyle \
        linker/scalastyle linker/test:scalastyle \
        jsEnvs/scalastyle jsEnvsTestKit/scalastyle nodeJSEnv/scalastyle \
        nodeJSEnv/test:scalastyle testAdapter/scalastyle \
        sbtPlugin/scalastyle testInterface/scalastyle \
        testSuite/scalastyle testSuite/test:scalastyle \
        testSuiteJVM/test:scalastyle \
        testSuiteEx/test:scalastyle helloworld/scalastyle \
        reversi/scalastyle testingExample/scalastyle \
        testingExample/test:scalastyle \
        jUnitPlugin/scalastyle jUnitRuntime/scalastyle \
        jUnitTestOutputsJVM/scalastyle jUnitTestOutputsJVM/test:scalastyle \
        jUnitTestOutputsJS/scalastyle jUnitTestOutputsJS/test:scalastyle &&
    sbt ++$scala! ir/compile:doc io/compile:doc logging/compile:doc \
        linker/compile:doc jsEnvs/compile:doc \
        jsEnvsTestKit/compile:doc nodeJSEnv/compile:doc \
        testAdapter/compile:doc stubs/compile:doc \
        sbtPlugin/compile:doc
  ]]></task>

  <task id="partestc"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbt ++$scala! partest/compile
  ]]></task>

  <task id="sbtplugin-test"><![CDATA[
    setJavaVersion 1.8
    SBT_VER_OVERRIDE=$sbt_version_override
    # Publish Scala.js artifacts locally
    # Then go into standalone project and test
    npm install &&
    sbt ++2.11.12! \
        compiler/publishLocal library/publishLocal \
        testInterface/publishLocal stubs/publishLocal \
        jUnitPlugin/publishLocal jUnitRuntime/publishLocal &&
    sbt ++$toolsscala! ${SBT_VER_OVERRIDE:+^^$SBT_VER_OVERRIDE} \
        ir/publishLocal io/publishLocal logging/publishLocal \
        linker/publishLocal jsEnvs/publishLocal \
        nodeJSEnv/publishLocal testAdapter/publishLocal \
        sbtPlugin/publishLocal &&
    cd sbt-plugin-test &&
    setJavaVersion $java &&
    if [ -n "$SBT_VER_OVERRIDE" ]; then echo "sbt.version=$SBT_VER_OVERRIDE" > ./project/build.properties; fi &&
    sbt noDOM/run \
        noDOM/testHtml multiTestJS/testHtml \
        test \
        noDOM/clean noDOM/concurrentUseOfLinkerTest \
        multiTestJS/test:testScalaJSSourceMapAttribute &&
    sbt 'set scalaJSStage in Global := FullOptStage' \
        noDOM/testHtml multiTestJS/testHtml
  ]]></task>

  <task id="partest-noopt"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbt ++$scala! package "partestSuite/testOnly -- --showDiff"
  ]]></task>

  <task id="partest-fastopt"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbt ++$scala! package "partestSuite/testOnly -- --fastOpt --showDiff"
  ]]></task>

  <task id="partest-fullopt"><![CDATA[
    setJavaVersion $java
    npm install &&
    sbt ++$scala! package "partestSuite/testOnly -- --fullOpt --showDiff"
  ]]></task>

  <matrix id="pr">
    <!-- Main test tasks -->
    <run task="main">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.13.0-M2</v>
      <v n="java">1.8</v>
    </run>

    <!-- Test suite on ECMAScript5 tasks -->
    <run task="test-suite-ecma-script5">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
      <v n="testSuite">testSuite</v>
    </run>
    <run task="test-suite-ecma-script5">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
      <v n="testSuite">testSuite</v>
    </run>
    <run task="test-suite-ecma-script5">
      <v n="scala">2.13.0-M2</v>
      <v n="java">1.8</v>
      <v n="testSuite">testSuite</v>
    </run>

    <!-- Test suite on ECMAScript5 with forced polyfills tasks -->
    <run task="test-suite-ecma-script5-force-polyfills">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
      <v n="testSuite">testSuite</v>
    </run>

    <!-- scala/scala test suite on ECMAScript5 tasks -->
    <run task="test-suite-ecma-script5">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
      <v n="testSuite">scalaTestSuite</v>
    </run>
    <run task="test-suite-ecma-script5">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
      <v n="testSuite">scalaTestSuite</v>
    </run>
    <run task="test-suite-ecma-script5">
      <v n="scala">2.13.0-M2</v>
      <v n="java">1.8</v>
      <v n="testSuite">scalaTestSuite</v>
    </run>

    <!-- Test suite on ECMAScript6 tasks -->
    <run task="test-suite-ecma-script6">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
      <v n="testSuite">testSuite</v>
    </run>
    <run task="test-suite-ecma-script6">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
      <v n="testSuite">testSuite</v>
    </run>
    <run task="test-suite-ecma-script6">
      <v n="scala">2.13.0-M2</v>
      <v n="java">1.8</v>
      <v n="testSuite">testSuite</v>
    </run>

    <!-- scala/scala test suite on ECMAScript6 tasks -->
    <run task="test-suite-ecma-script6">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
      <v n="testSuite">scalaTestSuite</v>
    </run>
    <run task="test-suite-ecma-script6">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
      <v n="testSuite">scalaTestSuite</v>
    </run>
    <run task="test-suite-ecma-script6">
      <v n="scala">2.13.0-M2</v>
      <v n="java">1.8</v>
      <v n="testSuite">scalaTestSuite</v>
    </run>

    <!-- Bootstrap test tasks -->
    <run task="bootstrap">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
    </run>
    <run task="bootstrap">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
    </run>
    <run task="bootstrap">
      <v n="scala">2.13.0-M2</v>
      <v n="java">1.8</v>
    </run>

    <!-- Tools / CLI / Stubs / sbtPlugin test tasks -->
    <run task="tools-stubs-sbtplugin">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
    </run>
    <run task="tools-stubs">
      <v n="scala">2.10.7</v>
      <v n="java">1.8</v>
    </run>
    <run task="tools-stubs">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
    </run>

    <!-- Partest compilation test tasks -->
    <run task="partestc">
      <v n="scala">2.11.0</v>
      <v n="java">1.8</v>
    </run>

    <!-- Partest fastOpt -->
    <run task="partest-fastopt">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.13.0-M2</v>
      <v n="java">1.8</v>
    </run>

    <!-- sbt plugin test tasks -->
    <run task="sbtplugin-test">
      <v n="java">1.8</v>
      <v n="toolsscala">2.10.7</v>
      <v n="sbt_version_override">0.13.16</v>
    </run>
    <run task="sbtplugin-test">
      <v n="java">1.8</v>
      <v n="toolsscala">2.12.4</v>
      <v n="sbt_version_override"></v>
    </run>
  </matrix>

  <matrix id="nightly">
    <run matrix="pr" />

    <!-- Main test tasks (all remaining Scala versions) -->
    <run task="main">
      <v n="scala">2.11.0</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.11.1</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.11.2</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.11.4</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.11.5</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.11.6</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.11.7</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.11.8</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.11.11</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.12.1</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.12.2</v>
      <v n="java">1.8</v>
    </run>
    <run task="main">
      <v n="scala">2.12.3</v>
      <v n="java">1.8</v>
    </run>

    <!-- Partest noOpt and fullOpt -->
    <run task="partest-noopt">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.12.4</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.13.0-M2</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.13.0-M2</v>
      <v n="java">1.8</v>
    </run>
  </matrix>

  <matrix id="weekly">
    <!-- weekly does not have to run nightly, since they will run at the same time -->

    <run task="partest-noopt">
      <v n="scala">2.11.0</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.0</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.0</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.11.1</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.1</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.1</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.11.2</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.2</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.2</v>
      <v n="java">1.8</v>
    </run>
    <!-- Partest does not compile on Scala 2.11.4 (see #1215). -->
    <run task="partest-noopt">
      <v n="scala">2.11.5</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.5</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.5</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.11.6</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.6</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.6</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.11.6</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.6</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.6</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.11.7</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.7</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.7</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.11.8</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.8</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.8</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.11.11</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.11</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.11</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.11.12</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.12.1</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.12.1</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.12.1</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.12.2</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.12.2</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.12.2</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-noopt">
      <v n="scala">2.12.3</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fastopt">
      <v n="scala">2.12.3</v>
      <v n="java">1.8</v>
    </run>
    <run task="partest-fullopt">
      <v n="scala">2.12.3</v>
      <v n="java">1.8</v>
    </run>
  </matrix>

</ci>
